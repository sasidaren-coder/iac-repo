# ==============================
# File: iac-repo/.github/workflows/ci-workflow.yaml
# Purpose: Reusable workflow called by client-config-repo
# ==============================

name: CI Workflow for Confluent IaC

on:
  workflow_call:
    inputs:
      file:
        required: true
        type: string
      cloud:
        required: true
        type: string
      env:
        required: true
        type: string
      version:
        required: true
        type: string

jobs:
  terragrunt-plan:
    runs-on: ubuntu-latest
    environment: ${{ inputs.env }}
    env:
      FILE_PATH: ${{ inputs.file }}
      CLOUD_PROVIDER: ${{ inputs.cloud }}
      ENV: ${{ inputs.env }}
      IAC_VERSION: ${{ inputs.version }}

    steps:
      - name: Checkout client-config-repo
        uses: actions/checkout@v4
        with:
          repository: sasidaren-coder/client-config-repo
          path: client-config-repo

      - name: Checkout iac-repo
        uses: actions/checkout@v4
        with:
          repository: sasidaren-coder/iac-repo
          ref: v${{ inputs.version }}
          path: iac-repo

      - name: Set computed environment variables
        run: |
          echo "DIR_PATH=$(dirname $FILE_PATH)" >> $GITHUB_ENV
          echo "FILE_NAME=$(basename $FILE_PATH)" >> $GITHUB_ENV
          echo "TOPIC_NAME=${FILE_NAME%.yaml}" >> $GITHUB_ENV
          echo "TG_SOURCE=iac-repo/modules//kafka-topics" >> $GITHUB_ENV

      - name: Set cloud-specific secrets
        run: |
          if [[ "$CLOUD_PROVIDER" == "azure" ]]; then
            echo "CONFLUENT_API_KEY=${{ secrets.CONFLUENT_API_KEY }}" >> $GITHUB_ENV
            echo "CONFLUENT_API_SECRET=${{ secrets.CONFLUENT_API_SECRET }}" >> $GITHUB_ENV
            echo "KAFKA_API_KEY=${{ secrets.KAFKA_API_KEY }}" >> $GITHUB_ENV
            echo "KAFKA_API_SECRET=${{ secrets.KAFKA_API_SECRET }}" >> $GITHUB_ENV
            echo "KAFKA_CLUSTER_ID=${{ secrets.KAFKA_CLUSTER_ID }}" >> $GITHUB_ENV
            echo "KAFKA_REST_ENDPOINT=${{ secrets.KAFKA_REST_ENDPOINT }}" >> $GITHUB_ENV
            echo "AZURE_RESOURCE_GROUP_NAME=${{ secrets.AZURE_RESOURCE_GROUP_NAME }}" >> $GITHUB_ENV
            echo "AZURE_STORAGE_ACCOUNT_NAME=${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }}" >> $GITHUB_ENV
            echo "AZURE_CONTAINER_NAME=${{ secrets.AZURE_CONTAINER_NAME }}" >> $GITHUB_ENV
            echo "ARM_CLIENT_ID=${{ secrets.ARM_CLIENT_ID }}" >> $GITHUB_ENV
            echo "ARM_CLIENT_SECRET=${{ secrets.ARM_CLIENT_SECRET }}" >> $GITHUB_ENV
            echo "ARM_SUBSCRIPTION_ID=${{ secrets.ARM_SUBSCRIPTION_ID }}" >> $GITHUB_ENV
            echo "ARM_TENANT_ID=${{ secrets.ARM_TENANT_ID }}" >> $GITHUB_ENV
          fi

      - name: Copy topic YAML to terragrunt path
        run: |
          cp client-config-repo/${{ env.FILE_PATH }} \
            iac-repo/terragrunt/${{ env.CLOUD_PROVIDER }}/${{ env.ENV }}/topics/

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Install Terragrunt
        run: |
          wget -q https://github.com/gruntwork-io/terragrunt/releases/download/v0.56.3/terragrunt_linux_amd64
          chmod +x terragrunt_linux_amd64
          sudo mv terragrunt_linux_amd64 /usr/local/bin/terragrunt

      - name: Terragrunt Init
        #working-directory: client-config-repo/${{ env.DIR_PATH }}
        working-directory: iac-repo/terragrunt/${{ env.CLOUD_PROVIDER }}/${{ env.ENV }}/topics
        run: terragrunt init

      - name: Terragrunt Validate
        working-directory: iac-repo/terragrunt/${{ env.CLOUD_PROVIDER }}/${{ env.ENV }}/topics
        run: terragrunt validate

      - name: Terragrunt Plan
        working-directory: iac-repo/terragrunt/${{ env.CLOUD_PROVIDER }}/${{ env.ENV }}/topics
        run: terragrunt plan
